// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: email_template.sql

package database

import (
	"context"
)

const createEmailTemplate = `-- name: CreateEmailTemplate :exec
INSERT INTO email_template (
        event_id,
        header_image,
        content,
        footer_image
    )
VALUES (?, ?, ?, ?)
`

type CreateEmailTemplateParams struct {
	EventID     int32
	HeaderImage string
	Content     string
	FooterImage string
}

func (q *Queries) CreateEmailTemplate(ctx context.Context, arg CreateEmailTemplateParams) error {
	_, err := q.db.ExecContext(ctx, createEmailTemplate,
		arg.EventID,
		arg.HeaderImage,
		arg.Content,
		arg.FooterImage,
	)
	return err
}

const getEmailTemplateByEventID = `-- name: GetEmailTemplateByEventID :one
SELECT id, event_id, header_image, content, footer_image, created_at, updated_at
FROM email_template
WHERE event_id = ?
`

func (q *Queries) GetEmailTemplateByEventID(ctx context.Context, eventID int32) (EmailTemplate, error) {
	row := q.db.QueryRowContext(ctx, getEmailTemplateByEventID, eventID)
	var i EmailTemplate
	err := row.Scan(
		&i.ID,
		&i.EventID,
		&i.HeaderImage,
		&i.Content,
		&i.FooterImage,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getEmailTemplateByID = `-- name: GetEmailTemplateByID :one
SELECT id, event_id, header_image, content, footer_image, created_at, updated_at
FROM email_template
WHERE id = ?
`

func (q *Queries) GetEmailTemplateByID(ctx context.Context, id int32) (EmailTemplate, error) {
	row := q.db.QueryRowContext(ctx, getEmailTemplateByID, id)
	var i EmailTemplate
	err := row.Scan(
		&i.ID,
		&i.EventID,
		&i.HeaderImage,
		&i.Content,
		&i.FooterImage,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateEmailTemplateByID = `-- name: UpdateEmailTemplateByID :exec
UPDATE email_template
SET event_id = ?,
    header_image = ?,
    content = ?,
    footer_image = ?
WHERE id = ?
`

type UpdateEmailTemplateByIDParams struct {
	EventID     int32
	HeaderImage string
	Content     string
	FooterImage string
	ID          int32
}

func (q *Queries) UpdateEmailTemplateByID(ctx context.Context, arg UpdateEmailTemplateByIDParams) error {
	_, err := q.db.ExecContext(ctx, updateEmailTemplateByID,
		arg.EventID,
		arg.HeaderImage,
		arg.Content,
		arg.FooterImage,
		arg.ID,
	)
	return err
}
